package com.example.demo.proxy.step3;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;

public class MyAdvice implements InvocationHandler {

	private Object target;

	public MyAdvice(Hello hello) {
		this.hello = hello;
	}

	@Override
	public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {

		System.out.println("-------------------"); // 때때로 수행하는 부가로직

		// 로직을 중복으로 갖고 있는 것은 관리적으로 비효율적이므로 여기서 타겟 객체의 메소드를
		// 호출하는 방식으로 대체합니다.
//		System.out.println("핵심로직: Hello~!!!");

		hello.say();

		System.out.println("===================");

		return null;
	}
}
